{"version":3,"sources":["Components/Pages/images/champ.jpg","Components/Pages/markdown/rules.md","Components/Pages/Navigation.jsx","Components/Pages/Footer.jsx","Components/Pages/Home.jsx","Components/Pages/About.jsx","Components/Pages/Contact.jsx","Components/Tables/googleData.js","Components/Tables/Fitlers.js","Components/Tables/BTable.js","Components/Tables/CustomFilters.js","Components/Tables/PlayerTable.js","Components/Tables/DraftTable.js","Components/Tables/OwnerDraftTable.js","Components/Pages/Draft.jsx","Components/Pages/MdPage.jsx","Components/Pages/Rules.jsx","Components/Tables/KeeperTable.js","Components/Pages/Keepers.jsx","Components/Tables/KeeperHistoryTable.js","Components/Tables/DraftHistoryTable.js","Components/Pages/History.jsx","Components/Tables/OwnerStatsTable.js","Components/Tables/SeasonStatsTable.js","Components/Pages/Stats.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","className","class","to","location","pathname","Footer","Home","state","markdown","align","src","champImage","alt","href","target","React","Component","About","Contact","getSheet","sheetName","a","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","creds","private_key","replace","loadInfo","sheet","sheetsByTitle","getDataAndHeaders","getRows","offset","rows","loadHeaderRow","headers","headerValues","data","forEach","row","obj","h","getAccessor","push","getDataAndColumns","filters","options","dataAndHeads","columns","getColumns","accessors","header","i","accessor","includes","column","Header","canGroupBy","disableFilters","hasOwnProperty","undefined","Filter","links","link","linkAccessor","Cell","original","lastColumn","length","columnName","toLowerCase","DefaultColumnFilter","filterValue","preFilteredRows","setFilter","count","value","onChange","e","placeholder","SelectColumnFilter","id","useMemo","Set","add","values","sort","map","option","key","fuzzyTextFilterFn","matchSorter","keys","autoRemove","val","ReactTable","updateMyData","skipReset","initialPageSize","showPages","filterTypes","fuzzyText","text","filter","rowValue","String","startsWith","defaultColumn","useTable","initialState","pageSize","autoResetPage","autoResetSelectedRows","autoResetFilters","disableMultiSort","useFilters","useGroupBy","useSortBy","useExpanded","usePagination","useRowSelect","getTableProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","nextPage","pageCount","gotoPage","previousPage","setPageSize","pageIndex","sortBy","groupBy","expanded","selectedRowIds","onClick","disabled","Number","striped","bordered","hover","top","size","headerGroup","getHeaderGroupProps","getHeaderProps","getGroupByToggleProps","isGrouped","getSortByToggleProps","render","isSorted","isSortedDesc","canFilter","getRowProps","cells","cell","getCellProps","getToggleRowExpandedProps","isExpanded","editable","subRows","isAggregated","isPlaceholder","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","PositionColumnFilter","console","log","RoundColumnFilter","rounds","round","PlayerTable","interval","columnFilters","Pick","Name","Pos","Team","Owner","Status","ADP","addedColumns","this","then","b","JSON","stringify","setState","update","timer","setInterval","clearInterval","hiddenColumns","DraftTable","nullValues","OwnerDraftTable","Draft","MdPage","fetch","response","children","rehypePlugins","rehypeRaw","Rules","KeeperTable","Keepers","KeeperHistoryTable","Year","DraftHistoryTable","History","OwnerStatsTable","SeasonStatsTable","Stats","App","path","exact","component","Boolean","window","hostname","match","require","config","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGAAAA,EAAOC,QAAU,IAA0B,mC,u0ECA3CD,EAAOC,QAAU,IAA0B,kC,2bC+E5BC,mBA5Ef,SAAoBC,GAClB,OACE,yBAAKC,UAAU,cACb,yBAAKC,MAAM,4CACT,yBAAKA,MAAM,aACT,kBAAC,IAAD,CAAMA,MAAM,eAAeC,GAAG,KAA9B,wBAGA,6BACE,wBAAID,MAAM,sBACR,wBACEA,MAAK,oBACyB,MAA5BF,EAAMI,SAASC,SAAmB,SAAW,KAG/C,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,KAA1B,SAIF,wBACED,MAAK,oBACyB,WAA5BF,EAAMI,SAASC,SAAwB,SAAW,KAGpD,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,UAA1B,UAKF,wBACED,MAAK,oBACyB,aAA5BF,EAAMI,SAASC,SAA0B,SAAW,KAGtD,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,YAA1B,YAKF,wBACED,MAAK,oBACyB,WAA5BF,EAAMI,SAASC,SAAwB,SAAW,KAGpD,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,UAA1B,UAKF,wBACED,MAAK,oBACyB,aAA5BF,EAAMI,SAASC,SAA0B,SAAW,KAGtD,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,YAA1B,YAKF,wBACED,MAAK,oBACyB,WAA5BF,EAAMI,SAASC,SAAwB,SAAW,KAGpD,kBAAC,IAAD,CAAMH,MAAM,WAAWC,GAAG,UAA1B,kBCnDDG,MAdf,WACE,OACE,yBAAKL,UAAU,UACb,4BAAQC,MAAM,6BACZ,yBAAKA,MAAM,aACT,uBAAGA,MAAM,8BAAT,wC,kDCoDKK,E,kDAvDb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDQ,MAAQ,CAAEC,SAAU,MAFR,E,0CAKnB,WACE,OACE,yBAAKR,UAAU,QACb,yBAAKC,MAAM,oCACT,yBAAKA,MAAM,sCACT,yBAAKA,MAAM,+CACT,wBAAIA,MAAM,eAAV,0BACA,yBACEA,MAAM,yCACNQ,MAAM,SACNC,IAAKC,IACLC,IAAI,WAKV,wBAAIX,MAAM,qBAEV,yBAAKA,MAAM,sCAET,yBAAKA,MAAM,YACT,2CACA,4BACE,wDACA,sDACA,mDACA,yDACA,qDACA,yDACA,qDACA,oDACA,uDAEF,sCAEF,yBAAKA,MAAM,YACT,wBAAIA,MAAM,IAAV,SACA,4BACE,4BAAI,uBAAGY,KAAK,2DAA2DC,OAAO,KAA1E,qBACJ,4BAAI,uBAAGD,KAAK,mCAAmCC,OAAO,KAAlD,+B,GA7CDC,IAAMC,WC0BVC,MA3Bf,WACE,OACE,yBAAKjB,UAAU,SACb,yBAAKC,MAAM,aACT,yBAAKA,MAAM,+BACT,yBAAKA,MAAM,YACT,yBACEA,MAAM,iCACNS,IAAI,8BACJE,IAAI,MAGR,yBAAKX,MAAM,YACT,wBAAIA,MAAM,qBAAV,SACA,yRCaGiB,MA3Bf,WACE,OACE,yBAAKlB,UAAU,WACb,yBAAKC,MAAM,aACT,yBAAKA,MAAM,+BACT,yBAAKA,MAAM,YACT,yBACEA,MAAM,iCACNS,IAAI,8BACJE,IAAI,MAGR,yBAAKX,MAAM,YACT,wBAAIA,MAAM,qBAAV,WACA,yR,6DCXGkB,E,8EAAf,WAAwBC,GAAxB,iBAAAC,EAAA,6DAEQC,EAAM,IAAIC,IAAkBA,kBAAkB,gDAFtD,SAKQD,EAAIE,sBAAsB,CAC9BC,aAAcC,EAAMD,aACpBE,YAAaD,EAAMC,YAAYC,QAAQ,OAAQ,QAPnD,uBAWQN,EAAIO,WAXZ,cAcQC,EAAQR,EAAIS,cAAcX,GAdlC,kBAeSU,GAfT,4C,+BAkBeE,E,8EAAf,WAAiCZ,GAAjC,qBAAAC,EAAA,sEAEsBF,EAASC,GAF/B,cAEQU,EAFR,gBAKqBA,EAAMG,QAAQ,CAAEC,OAAQ,IAL7C,cAKQC,EALR,gBAMQL,EAAMM,gBANd,cASQC,EAAUP,EAAMQ,aAChBC,EAAO,GACbJ,EAAKK,SAAQ,SAAAC,GACX,IAAMC,EAAM,GACZL,EAAQG,SAAQ,SAAAG,GACdD,EAAIE,EAAYD,IAAMF,EAAIE,MAE5BJ,EAAKM,KAAKH,MAhBd,kBAqBS,CAACH,KAAMA,EAAMF,QAASA,IArB/B,6C,+BAwBeS,E,8EAAf,WAAiC1B,GAAjC,mCAAAC,EAAA,6DAA4C0B,EAA5C,+BAAoD,GAAIC,EAAxD,+BAAgE,GAAhE,SAC6BhB,EAAkBZ,GAD/C,cACQ6B,EADR,OAEQV,EAAOU,EAAaV,KACpBW,EAAUC,EAAWF,EAAaZ,QAASU,EAASC,GAH5D,kBAIS,CAACT,KAAMA,EAAMW,QAASA,IAJ/B,4C,sBAOA,SAASC,EAAWd,GAKlB,IALmD,IAAxBU,EAAuB,uDAAf,GAAIC,EAAW,uDAAH,GAGzCE,EAAU,GACVE,EAAY,GAJgC,aAQhD,IAAMC,EAAShB,EAAQiB,GACjBC,EAAWX,EAAYS,GAG7B,GAAIE,EAASC,SAAS,WAAc,iBAGpC,GAAIJ,EAAUI,SAASD,GAAa,iBAGpC,IAAME,EAAS,CACbC,OAAQL,EACRE,SAAUA,EACVI,YAAY,EACZC,gBAAgB,GA4BlB,OAvBIb,EAAQc,eAAeR,SACDS,IAApBf,EAAQM,GAA4C,OAApBN,EAAQM,KAC1CI,EAAOG,gBAAiB,EACxBH,EAAOM,OAAShB,EAAQM,IAMxBL,EAAQa,eAAe,UACzBb,EAAQgB,MAAMxB,SAAQ,SAAAyB,GACpB,GAAIA,EAAKJ,eAAeR,GAAQ,CAC9B,IAAMa,EAAetB,EAAYqB,EAAKZ,IACtCI,EAAOU,KAAO,gBAAG1B,EAAH,EAAGA,IAAH,OAAa,uBAAG5B,KAAM4B,EAAI2B,SAASF,GAAepD,OAAO,UAAU2B,EAAI2B,SAASb,SAMpGH,EAAUP,KAAKU,GACfL,EAAQL,KAAKY,GAGVT,EAAQa,eAAe,eACpBb,EAAQqB,YAAchB,EAAU,aADtC,GA7COC,EAAE,EAAGA,EAAEjB,EAAQiC,OAAQhB,IAAI,CAAC,IAAD,qCA8CI,MAIxC,OAAOJ,EAIT,SAASN,EAAY2B,GACnB,OAAOA,EAAW3C,QAAQ,KAAM,IAAI4C,c,yDC9EtC,SAASC,EAAT,GAEI,IAAD,IADDhB,OAAUiB,EACT,EADSA,YAAaC,EACtB,EADsBA,gBAAiBC,EACvC,EADuCA,UAElCC,EAAQF,EAAgBL,OAE9B,OACE,2BACEQ,MAAOJ,GAAe,GACtBK,SAAU,SAAAC,GACRJ,EAAUI,EAAElE,OAAOgE,YAAShB,IAE9BmB,YAAW,iBAAYJ,EAAZ,iBAOjB,SAASK,EAAT,GAEI,IAAD,IADDzB,OAAUiB,EACT,EADSA,YAAaE,EACtB,EADsBA,UAAWD,EACjC,EADiCA,gBAAiBQ,EAClD,EADkDA,GAI7CnC,EAAUjC,IAAMqE,SAAQ,WAC5B,IAAMpC,EAAU,IAAIqC,IAKpB,OAJAV,EAAgBnC,SAAQ,SAAAC,GACtBO,EAAQsC,IAAI7C,EAAI8C,OAAOJ,OAGlB,YAAInC,EAAQuC,UAAUC,SAC5B,CAACL,EAAIR,IAGR,OACE,4BACEG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAElE,OAAOgE,YAAShB,KAG9B,4BAAQgB,MAAM,IAAd,OACC9B,EAAQyC,KAAI,SAACC,EAAQpC,GAAT,OACX,4BAAQqC,IAAKrC,EAAGwB,MAAOY,GACpBA,OA+FX,SAASE,EAAkBzD,EAAMgD,EAAIT,GACnC,OAAOmB,YAAY1D,EAAMuC,EAAa,CAAEoB,KAAM,CAAC,SAAArD,GAAG,OAAIA,EAAI8C,OAAOJ,OAInES,EAAkBG,WAAa,SAAAC,GAAG,OAAKA,G,wBC3JvC,SAASC,EAAT,GAAoG,IAA9E/C,EAA6E,EAA7EA,QAASX,EAAoE,EAApEA,KAAM2D,EAA8D,EAA9DA,aAAcC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,gBAAqC,IAApBC,iBAAoB,SAC3FC,EAAcvF,IAAMqE,SACxB,iBAAO,CAELmB,UAAWX,EAGXY,KAAM,SAACrE,EAAMgD,EAAIT,GACf,OAAOvC,EAAKsE,QAAO,SAAAhE,GACjB,IAAMiE,EAAWjE,EAAI8C,OAAOJ,GAC5B,YAAoBrB,IAAb4C,GACHC,OAAOD,GACNlC,cACAoC,WAAWD,OAAOjC,GAAaF,sBAK1C,IAGIqC,EAAgB9F,IAAMqE,SAC1B,iBAAO,CAELrB,OAAQU,KAIV,IAIF,EAyBIqC,mBACF,CACE5D,UACAX,OACAwE,aAAc,CACZC,SAAUZ,GAEZS,gBACAP,cAMAJ,eAGAe,eAAgBd,EAChBe,uBAAwBf,EACxBgB,kBAAmBhB,EACnBiB,kBAAkB,GAEpBC,aACAC,aACAC,YACAC,cACAC,gBACAC,gBAnDAC,EADF,EACEA,cACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,KAIAC,EARF,EAQEA,gBACAC,EATF,EASEA,YACAC,EAVF,EAUEA,YAGAC,GAbF,EAWEC,UAXF,EAYEC,SAZF,EAaEF,UACAG,EAdF,EAcEA,aACAC,EAfF,EAeEA,YAfF,IAgBE/H,MACEgI,EAjBJ,EAiBIA,UACAvB,EAlBJ,EAkBIA,SAlBJ,EAmBIwB,OAnBJ,EAoBIC,QApBJ,EAqBIC,SArBJ,EAsBI3F,QAtBJ,EAuBI4F,eAmCJ,OACE,oCACKtC,GACD,6BACE,wBAAIpG,MAAM,cACR,wBAAIA,MAAM,aACR,uBAAGA,MAAM,YAAYY,KAAK,sBAAsB+H,QAAS,kBAAMP,KAAgBQ,UAAWd,GAA1F,SAEF,wBAAI9H,MAAM,aACR,uBAAGA,MAAM,YAAYY,KAAK,sBAAsB+H,QAAS,kBAAMV,KAAYW,UAAWb,GAAtF,SAIF,4BACE,4BAAQ/H,MAAM,oBAAoB4I,UAAQ,GAA1C,OACO,IACL,gCACGN,EAAY,EADf,OACsBN,EAAY3D,QACxB,MAKd,4BACE,4BACErE,MAAM,cACN6E,MAAOkC,EACPjC,SAAU,SAAAC,GACRsD,EAAYQ,OAAO9D,EAAElE,OAAOgE,UAG7B,CAAC,GAAI,GAAI,IAAK,KAAKW,KAAI,SAAAuB,GAAQ,OAC9B,4BAAQrB,IAAKqB,EAAUlC,MAAOkC,GAA9B,QACQA,UAepB,kBAAC,IAAD,eAAQ+B,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAG,EAACC,KAAK,MAASxB,KAC/C,2BAAO1H,MAAM,mCACV2H,EAAanC,KAAI,SAAA2D,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAY/G,QAAQoD,KAAI,SAAAhC,GAAM,OAC7B,uBAAQA,EAAO6F,iBACb,6BACG7F,EAAOE,WAEN,yBAAUF,EAAO8F,wBACd9F,EAAO+F,UAAY,gBAAQ,iBAE5B,KACJ,yBAAU/F,EAAOgG,uBACdhG,EAAOiG,OAAO,UAEdjG,EAAOkG,SACJlG,EAAOmG,aACL,gBACA,gBACF,KAIR,6BAAMnG,EAAOoG,UAAYpG,EAAOiG,OAAO,UAAY,eAM7D,+BACG5B,EAAKrC,KAAI,SAAAhD,GAER,OADAoF,EAAWpF,GAET,uBAAQA,EAAIqH,cACTrH,EAAIsH,MAAMtE,KAAI,SAAAuE,GACb,OACE,uBAAQA,EAAKC,eACVD,EAAKR,UAEJ,oCACE,yBAAU/G,EAAIyH,4BACXzH,EAAI0H,WAAa,eAAO,gBACnB,IACPH,EAAKN,OAAO,OAAQ,CAAEU,UAAU,IAJnC,KAKG3H,EAAI4H,QAAQ/F,OALf,KAOE0F,EAAKM,aAGPN,EAAKN,OAAO,cACVM,EAAKO,cAAgB,KAEvBP,EAAKN,OAAO,OAAQ,CAAEU,UAAU,cAelD,6BACE,+BAnNM,IAuOR,6BACA,8BAkCwBrJ,IAAMyJ,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iBAC7BC,EAAa7J,IAAM8J,SACnBC,EAAcL,GAAOG,EAM3B,OAJA7J,IAAMgK,WAAU,WACdD,EAAYE,QAAQN,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,oCACE,yCAAOO,KAAK,WAAWR,IAAKK,GAAiBH,QCnRrD,SAASO,EAAT,GAEI,IAAD,IADDzH,OAAUiB,EACT,EADSA,YAAaE,EACtB,EADsBA,UAIjB5B,GAHL,EADiC2B,gBACjC,EADkDQ,GAInCpE,IAAMqE,SAAQ,WAC5B,MAAO,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,UAIzD,OACE,4BACEN,MAAOJ,EACPK,SAAU,SAAAC,GACRmG,QAAQC,IAAIpG,EAAElE,OAAOgE,OACrBF,EAAUI,EAAElE,OAAOgE,YAAShB,KAG9B,4BAAQgB,MAAM,IAAd,OACC9B,EAAQyC,KAAI,SAACC,EAAQpC,GAAT,OACX,4BAAQqC,IAAKrC,EAAGwB,MAAOY,GACpBA,OAOX,SAAS2F,EAAT,GAEI,IAAD,IADD5H,OAAUiB,EACT,EADSA,YAAaE,EACtB,EADsBA,UAIjB5B,GAHL,EADiC2B,gBACjC,EADkDQ,GAInCpE,IAAMqE,SAAQ,WAE5B,IADA,IAAMkG,EAAS,GACNhI,EAAE,EAAGA,EAAE,GAAIA,IAAI,CACtB,IAAIiI,EAAQ,IAAMjI,EAAI,IAClBA,GAAK,KAAKiI,EAAQjI,EAAI,KAC1BgI,EAAOzI,KAAK0I,GAEd,OAAOD,MAIT,OACE,4BACExG,MAAOJ,EACPK,SAAU,SAAAC,GACRJ,EAAUI,EAAElE,OAAOgE,YAAShB,KAG9B,4BAAQgB,MAAM,IAAd,OACC9B,EAAQyC,KAAI,SAACC,EAAQpC,GAAT,OACX,4BAAQqC,IAAKrC,EAAGwB,MAAOY,GACpBA,OCSI8F,M,kDAjEb,WAAYzL,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,UACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbC,KAAMN,EACNO,KAAMnH,EACNoH,IAAKX,EACLY,KAAM5G,EACN6G,MAAO7G,EACP8G,OAAQ9G,EACR+G,IAAKZ,GAEPrI,QAAS,CACPgB,MAAO,CAAC,CAAC4H,KAAM,SACfvH,WAAY,OACZ6H,aAAc,KAnBF,E,0CAwBlB,WAAU,IAAD,OACPpJ,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjByG,cAAeV,KAAK5L,MAAMsM,oB,GAxDV9L,IAAMC,WCoFjB8L,M,kDAlFb,WAAY/M,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,QACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbC,KAAMN,EACNO,KAAMnH,EACNoH,IAAKX,EACLY,KAAM5G,EACN6G,MAAO7G,EACP8G,OAAQ9G,GAEVlC,QAAS,CACPgB,MAAO,CAAC,CAAC4H,KAAM,SACfvH,WAAY,MACZ0I,WAAY,CAAC,CAACnB,KAAM,gBAlBR,E,0CAwClB,WAAU,IAAD,OACP9I,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAqChG,IAAsBrB,EAAGgL,EAAHhL,EAnCE,EAAKd,MAAMgC,KAmCV8J,EAnCgB3J,EAAIH,KAoCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAnCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAElBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjBC,WAAW,Q,GAzEItF,IAAMC,WC0DhBgM,M,kDA1Db,WAAYjN,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,aACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,GAEf1I,QAAS,CACPgB,MAAO,GACPkI,aAAc,KAXF,E,0CAgBlB,WAAU,IAAD,OACPpJ,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAqChG,IAAsBrB,EAAGgL,EAAHhL,EAnCE,EAAKd,MAAMgC,KAmCV8J,EAnCgB3J,EAAIH,KAoCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAnCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXE,WAAW,EACXD,gBAAiB,GACjByG,cAAeV,KAAK5L,MAAMsM,oB,GAjDN9L,IAAMC,WCcrBiM,MA5Bf,WACE,OACE,yBAAKjN,UAAU,WACb,yBAAKC,MAAM,4BACT,wBAAIA,MAAM,eAAV,SACA,wBAAIA,MAAM,sBACV,yBAAKA,MAAM,4BACT,yBAAKA,MAAM,aACX,sCACE,kBAAC,EAAD,QAGJ,yBAAKA,MAAM,4BACT,yBAAKA,MAAM,YACT,qCACA,kBAAC,EAAD,OAEF,yBAAKA,MAAM,YACT,uCACA,kBAAC,EAAD,W,yDCcGiN,G,kDAjCb,WAAYnN,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CAACC,SAAU,MAFR,E,sDAKlB,WAAsB,IAAD,OACnB2K,QAAQC,IAAI,cACZ+B,MAAMhB,KAAKpM,MAAMS,UAAU4L,MAAK,SAACgB,GAAD,OAAcA,EAAS5G,UAAQ4F,MAAK,SAAC5F,GACnE2E,QAAQC,IAAI5E,GACZ,EAAKgG,SAAS,CAAEhM,SAAUgG,S,oBAI9B,WACE,OACE,yBAAKxG,UAAU,SACb,yBAAKC,MAAM,aACT,yBAAKA,MAAM,wDACT,yBAAKA,MAAM,YACT,kBAAC,IAAD,CACEoN,SAAUlB,KAAK5L,MAAMC,SACrB8M,cAAe,CAACC,WAKxB,kC,GA3BaxM,IAAMC,WCwBZwM,G,kDArBb,WAAYzN,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CAACC,SAAU,MAFR,E,sDAKlB,WAAsB,IAAD,OACnB2K,QAAQC,IAAI,cACZ+B,MAAM3M,KAAU4L,MAAK,SAACgB,GAAD,OAAcA,EAAS5G,UAAQ4F,MAAK,SAAC5F,GACxD2E,QAAQC,IAAI5E,GACZ,EAAKgG,SAAS,CAAEhM,SAAUgG,S,oBAI9B,WACE,OACE,kBAAC,GAAD,CAAQhG,SAAUA,U,GAhBJO,IAAMC,WC4EXyM,O,kDA7Db,WAAY1N,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,UACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbE,KAAMnH,EACNoH,IAAKX,EACLY,KAAM5G,EACN6G,MAAO7G,GAETlC,QAAS,CACPgB,MAAO,CAAC,CAAC4H,KAAM,SACfvH,WAAY,SAfA,E,0CAoBlB,WAAU,IAAD,OACPvB,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjBC,WAAW,Q,GApDKtF,IAAMC,WCDjB0M,OAhBf,WACE,OACE,yBAAK1N,UAAU,WACf,yBAAKC,MAAM,4BACT,wBAAIA,MAAM,eAAV,WACA,wBAAIA,MAAM,qBACV,yBAAKA,MAAM,oCACT,yBAAKA,MAAM,oBACT,kBAAC,GAAD,WCwEK0N,O,kDA9Db,WAAY5N,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,gBACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbkC,KAAM1I,EACN0G,KAAMnH,EACNoH,IAAKX,EACLY,KAAM5G,EACN6G,MAAO7G,GAETlC,QAAS,CACPgB,MAAO,GACPK,WAAY,SAhBA,E,0CAqBlB,WAAU,IAAD,OACPvB,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjBC,WAAW,Q,GArDYtF,IAAMC,WCgExB6M,O,kDA/Db,WAAY9N,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,eACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbkC,KAAM1I,EACNyG,KAAMN,EACNO,KAAMnH,EACNoH,IAAKX,EACLY,KAAM5G,EACN6G,MAAO7G,GAETlC,QAAS,CACPgB,MAAO,GACPK,WAAY,QAjBA,E,0CAsBlB,WAAU,IAAD,OACPvB,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjBC,WAAW,Q,GAtDWtF,IAAMC,WCMvB8M,OAtBf,WACE,OACE,yBAAK9N,UAAU,WACb,yBAAKC,MAAM,4BACT,wBAAIA,MAAM,eAAV,WACA,wBAAIA,MAAM,sBACV,yBAAKA,MAAM,4BACT,yBAAKA,MAAM,YACT,6CACA,kBAAE,GAAF,OAEF,yBAAKA,MAAM,YACT,8CACA,kBAAE,GAAF,WC2DG8N,O,kDAvDb,WAAYhO,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,aACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,GAEf1I,QAAS,IATK,E,0CAclB,WAAU,IAAD,OACPF,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,GACjBC,WAAW,Q,GA9CStF,IAAMC,WC0DrBgN,O,kDAzDb,WAAYjO,GAAO,IAAD,8BAChB,cAAMA,IACDQ,MAAQ,CACXa,UAAW,cACX8B,QAAS,GACTX,KAAM,GACNkJ,SAAU,EACVC,cAAe,CACbkC,KAAM1I,EACN6G,MAAO7G,GAETlC,QAAS,IAXK,E,0CAgBlB,WAAU,IAAD,OACPF,EAAkBqJ,KAAK5L,MAAMa,UAAW+K,KAAK5L,MAAMmL,cAAeS,KAAK5L,MAAMyC,SAASoJ,MAAK,SAAC1J,GAoChG,IAAsBrB,EAAGgL,EAAHhL,EAlCE,EAAKd,MAAMgC,KAkCV8J,EAlCgB3J,EAAIH,KAmCpC+J,KAAKC,UAAUlL,KAAOiL,KAAKC,UAAUF,IAlCtC,EAAKG,SAAS,CAAEjK,KAAMG,EAAIH,KAAMW,QAASR,EAAIQ,e,+BAKnD,WAAqB,IAAD,OAClBiJ,KAAKM,SACFN,KAAKV,UAAU,MAChBU,KAAKO,MAAQC,aAAY,WAAQ,EAAKF,WAAYN,KAAK5L,MAAMkL,a,kCAIjE,WACKU,KAAKV,UAAU,KAChBmB,cAAcT,KAAKO,S,oBAKvB,WACE,OACI,kBAACzG,EAAD,CACE/C,QAASiJ,KAAK5L,MAAM2C,QACpBX,KAAM4J,KAAK5L,MAAMgC,KACjB2D,aAAciG,KAAKM,SACnBtG,WAAW,EACXC,gBAAiB,IACjBC,WAAW,Q,GAhDUtF,IAAMC,WCOtBiN,OAvBf,WACE,OACE,yBAAKjO,UAAU,WACf,yBAAKC,MAAM,4BACT,wBAAIA,MAAM,eAAV,SACA,wBAAIA,MAAM,qBACV,yBAAKA,MAAM,oCACT,yBAAKA,MAAM,oBACT,4CACA,kBAAC,GAAD,QAGJ,yBAAKA,MAAM,oCACT,yBAAKA,MAAM,qBACT,6CACA,kBAAC,GAAD,W,OCQKiO,OArBf,WACE,OACE,yBAAKlO,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmO,KAAK,IAAIC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAK,EAACC,UAAW,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,UAAW,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAK,EAACC,UAAW,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,OAAK,EAACC,UAAW,kBAAM,kBAAC,GAAD,SAC9C,kBAAC,IAAD,CAAOF,KAAK,SAASC,OAAK,EAACC,UAAW,kBAAM,kBAAC,GAAD,UAE9C,kBAAC,EAAD,SCTYC,QACW,cAA7BC,OAAOpO,SAASqO,UAEe,UAA7BD,OAAOpO,SAASqO,UAEhBD,OAAOpO,SAASqO,SAASC,MACvB,2DCbNC,EAAQ,KAAUC,SAElBC,IAASlF,OAAO,kBAAC,GAAD,MAASmF,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7C,MAAK,SAAA8C,GACjCA,EAAaC,kB","file":"static/js/main.6d2bea0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/champ.11a050e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rules.3383116d.md\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nfunction Navigation(props) {\n  return (\n    <div className=\"navigation\">\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n        <div class=\"container\">\n          <Link class=\"navbar-brand\" to=\"/\">\n            MIT Fantasy Baseball\n          </Link>\n          <div>\n            <ul class=\"navbar-nav ml-auto\">\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/draft\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/draft\">\n                  Draft\n                </Link>\n                \n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/keepers\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/keepers\">\n                  Keepers\n                </Link>\n                \n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/stats\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/stats\">\n                  Stats\n                </Link>\n                \n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/history\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/history\">\n                  History\n                </Link>\n                \n              </li>\n              <li\n                class={`nav-item  ${\n                  props.location.pathname === \"/rules\" ? \"active\" : \"\"\n                }`}\n              >\n                <Link class=\"nav-link\" to=\"/rules\">\n                  Rules\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Navigation);\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div className=\"footer\">\n      <footer class=\"py-3 bg-dark fixed-bottom\">\n        <div class=\"container\">\n          <p class=\"m-0 text-center text-white\">\n            Copyright &copy; Your Website 2020\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport champImage from \"./images/champ.jpg\"\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { markdown: null }\n  }\n\n  render() {\n    return (\n      <div className=\"home\">\n        <div class=\"container justify-content-center\">\n          <div class=\"row justify-content-md-center my-5\">\n            <div class=\"col-lg-6 justify-content-center text-center\">\n              <h1 class=\"text-center\">2020 Champion: Vaughan</h1>\n              <img\n                class=\"img-fluid rounded mx-auto mb-4 mb-lg-0\"\n                align=\"center\"\n                src={champImage}\n                alt=\"file\"\n              />\n            </div>\n          </div>\n          \n          <hr class=\"col-lg-6 mx-auto\"/>\n\n          <div class=\"row justify-content-md-center my-5\">\n          \n            <div class=\"col-lg-3\">\n              <h3>Past Champs</h3>\n              <ul>\n                <li>2020: Vaughan (60-26-4)*</li>\n                <li>2019: Drix (132-63-15)</li>\n                <li>2018: AJ (119-83-8)</li>\n                <li>2017: Vaughan (127-67-16)</li>\n                <li>2016: Mac (117-78-15)</li>\n                <li>2015: Vaughan (110-87-13)</li>\n                <li>2014: Drix (117-85-8)</li>\n                <li>2013: AJ (119-78-13)</li>\n                <li>2012: Drix (129-58-13)</li>\n              </ul>\n              <p>*COVID</p>\n            </div>\n            <div class=\"col-lg-3\">\n              <h3 class=\"\">Links</h3>\n              <ul>\n                <li><a href=\"https://fantasy.espn.com/baseball/league?leagueId=128975\" target=\"_\">ESPN League Home</a></li>\n                <li><a href=\"https://www.fantasypros.com/mlb/\" target=\"_\">FantasyPros - MLB</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div className=\"about\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">About</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <div class=\"container\">\n        <div class=\"row align-items-center my-5\">\n          <div class=\"col-lg-7\">\n            <img\n              class=\"img-fluid rounded mb-4 mb-lg-0\"\n              src=\"http://placehold.it/900x400\"\n              alt=\"\"\n            />\n          </div>\n          <div class=\"col-lg-5\">\n            <h1 class=\"font-weight-light\">Contact</h1>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting\n              industry. Lorem Ipsum has been the industry's standard dummy text\n              ever since the 1500s, when an unknown printer took a galley of\n              type and scrambled it to make a type specimen book.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import GoogleSpreadsheet from 'google-spreadsheet'\r\nimport creds from '../../client_secret.json'\r\nimport React from 'react'\r\n\r\n// returns sheet from a google doc\r\nasync function getSheet(sheetName){\r\n  // get doc by docID\r\n  const doc = new GoogleSpreadsheet.GoogleSpreadsheet('1YvznM3U5FS6SnirNS_JyLHElkD4FlqVJu_qz_-NIhWg')\r\n\r\n  // authenticate\r\n  await doc.useServiceAccountAuth({\r\n    client_email: creds.client_email,\r\n    private_key: creds.private_key.replace(/\\\\n/g, \"\\n\")\r\n  });\r\n\r\n  // load info\r\n  await doc.loadInfo();\r\n\r\n  // get sheet by name\r\n  const sheet = doc.sheetsByTitle[sheetName];\r\n  return sheet\r\n}\r\n\r\nasync function getDataAndHeaders(sheetName) {\r\n  // get sheet\r\n  const sheet = await getSheet(sheetName)\r\n\r\n  // load rows and header rows\r\n  const rows = await sheet.getRows({ offset: 0 })\r\n  await sheet.loadHeaderRow()\r\n\r\n  // modify rows as list react table objects\r\n  const headers = sheet.headerValues\r\n  const data = []\r\n  rows.forEach(row => { \r\n    const obj = {}\r\n    headers.forEach(h=>{\r\n      obj[getAccessor(h)] = row[h]\r\n    })\r\n    data.push(obj)\r\n   })\r\n\r\n\r\n   // return data\r\n  return {data: data, headers: headers}\r\n}\r\n\r\nasync function getDataAndColumns(sheetName, filters={}, options={}){\r\n  const dataAndHeads = await getDataAndHeaders(sheetName)\r\n  const data = dataAndHeads.data\r\n  const columns = getColumns(dataAndHeads.headers, filters, options)\r\n  return {data: data, columns: columns}\r\n}\r\n\r\nfunction getColumns(headers, filters={}, options={}){\r\n\r\n  // create list of react table column objects\r\n  const columns = []\r\n  const accessors = []\r\n  for (var i=0; i<headers.length; i++){\r\n    \r\n    // get header and accessor\r\n    const header = headers[i]\r\n    const accessor = getAccessor(header)\r\n\r\n    // skip if header contians 'hidden'\r\n    if (accessor.includes('-hidden')) { continue; }\r\n\r\n    // skip if accessor exists\r\n    if (accessors.includes(accessor)) { continue; }\r\n\r\n    // create react table column object\r\n    const column = {\r\n      Header: header,\r\n      accessor: accessor,\r\n      canGroupBy: false,\r\n      disableFilters: true,\r\n    }\r\n\r\n\r\n    // add filter if defined\r\n    if (filters.hasOwnProperty(header)){\r\n      if (filters[header] !== undefined | filters[header] !== null){\r\n        column.disableFilters = false\r\n        column.Filter = filters[header]\r\n      }\r\n    }\r\n\r\n    // add hyperlink if defined\r\n    // https://stackoverflow.com/questions/56922381/how-to-include-url-in-react-table-cell\r\n    if (options.hasOwnProperty('links')) {\r\n      options.links.forEach(link => {\r\n        if (link.hasOwnProperty(header)){\r\n          const linkAccessor = getAccessor(link[header])\r\n          column.Cell = ({ row }) => <a href={row.original[linkAccessor]} target=\"_blank\">{row.original[accessor]}</a>\r\n        }\r\n      })\r\n    }\r\n\r\n    // add to list\r\n    accessors.push(accessor)\r\n    columns.push(column)\r\n\r\n    // stop after last column\r\n    if(options.hasOwnProperty('lastColumn')){\r\n      if (options.lastColumn == header) { break; }\r\n    }\r\n  }\r\n  \r\n  return columns\r\n}\r\n\r\n// remove spaces and capitals\r\nfunction getAccessor(columnName){\r\n  return columnName.replace(/ /g, '').toLowerCase()\r\n}\r\n\r\nexport { getDataAndColumns }","import React from 'react'\r\nimport { matchSorter } from 'match-sorter'\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  value: initialValue,\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n  editable,\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed externall, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  if (!editable) {\r\n    return `${initialValue}`\r\n  }\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} />\r\n}\r\n\r\n// Define a default UI for filtering\r\nfunction DefaultColumnFilter({\r\n  column: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n  const count = preFilteredRows.length\r\n\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\r\n      }}\r\n      placeholder={`Search ${count} records...`}\r\n    />\r\n  )\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const options = new Set()\r\n    preFilteredRows.forEach(row => {\r\n      options.add(row.values[id])\r\n    })\r\n    \r\n    return [...options.values()].sort()\r\n  }, [id, preFilteredRows])\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\n// This is a custom filter UI that uses a\r\n// slider to set the filter value between a column's\r\n// min and max values\r\nfunction SliderColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the min and max\r\n  // using the preFilteredRows\r\n\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        value={filterValue || min}\r\n        onChange={e => {\r\n          setFilter(parseInt(e.target.value, 10))\r\n        }}\r\n      />\r\n      <button onClick={() => setFilter(undefined)}>Off</button>\r\n    </>\r\n  )\r\n}\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n  column: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n  const [min, max] = React.useMemo(() => {\r\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\r\n    preFilteredRows.forEach(row => {\r\n      min = Math.min(row.values[id], min)\r\n      max = Math.max(row.values[id], max)\r\n    })\r\n    return [min, max]\r\n  }, [id, preFilteredRows])\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n      }}\r\n    >\r\n      <input\r\n        value={filterValue[0] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\r\n        }}\r\n        placeholder={`Min (${min})`}\r\n        style={{\r\n          width: '70px',\r\n          marginRight: '0.5rem',\r\n        }}\r\n      />\r\n      to\r\n      <input\r\n        value={filterValue[1] || ''}\r\n        type=\"number\"\r\n        onChange={e => {\r\n          const val = e.target.value\r\n          setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\r\n        }}\r\n        placeholder={`Max (${max})`}\r\n        style={{\r\n          width: '70px',\r\n          marginLeft: '0.5rem',\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\r\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\r\n}\r\n\r\n// Let the table remove the filter if the string is empty\r\nfuzzyTextFilterFn.autoRemove = val => !val\r\n\r\nexport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n}","import React from 'react'\r\n//import \"bootswatch/dist/cerulean/bootstrap.min.css\"\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport BTable from 'react-bootstrap/Table';\r\n\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useSortBy,\r\n  useFilters,\r\n  useGroupBy,\r\n  useExpanded,\r\n  useRowSelect,\r\n} from 'react-table'\r\n\r\nimport {\r\n  DefaultColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nconst debug = false\r\n\r\n\r\n// Be sure to pass our updateMyData and the skipReset option\r\nfunction ReactTable({ columns, data, updateMyData, skipReset, initialPageSize, showPages = true }) {\r\n  const filterTypes = React.useMemo(\r\n    () => ({\r\n      // Add a new fuzzyTextFilterFn filter type.\r\n      fuzzyText: fuzzyTextFilterFn,\r\n      // Or, override the default text filter to use\r\n      // \"startWith\"\r\n      text: (rows, id, filterValue) => {\r\n        return rows.filter(row => {\r\n          const rowValue = row.values[id]\r\n          return rowValue !== undefined\r\n            ? String(rowValue)\r\n              .toLowerCase()\r\n              .startsWith(String(filterValue).toLowerCase())\r\n            : true\r\n        })\r\n      },\r\n    }),\r\n    []\r\n  )\r\n\r\n  const defaultColumn = React.useMemo(\r\n    () => ({\r\n      // Let's set up our default Filter UI\r\n      Filter: DefaultColumnFilter,\r\n      // And also our default editable cell\r\n      //Cell: EditableCell,\r\n    }),\r\n    []\r\n  )\r\n\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const {\r\n    getTableProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page, // Instead of using 'rows', we'll use page,\r\n    // which has only the rows for the active page\r\n\r\n    // The rest of these things are super handy, too ;)\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: {\r\n      pageIndex,\r\n      pageSize,\r\n      sortBy,\r\n      groupBy,\r\n      expanded,\r\n      filters,\r\n      selectedRowIds,\r\n    },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: {\r\n        pageSize: initialPageSize,\r\n      },\r\n      defaultColumn,\r\n      filterTypes,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n      // We also need to pass this so the page doesn't change\r\n      // when we edit the data.\r\n      autoResetPage: !skipReset,\r\n      autoResetSelectedRows: !skipReset,\r\n      autoResetFilters: !skipReset,\r\n      disableMultiSort: true,\r\n    },\r\n    useFilters,\r\n    useGroupBy,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination,\r\n    useRowSelect,\r\n    // Here we will use a plugin to add our selection column\r\n\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n        {showPages &&\r\n        <div>\r\n          <ul class=\"pagination\">\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"javascript:void(0);\" onClick={() => previousPage()} disabled={!canPreviousPage}>&laquo;</a>\r\n            </li>\r\n            <li class=\"page-item\">\r\n              <a class=\"page-link\" href=\"javascript:void(0);\" onClick={() => nextPage()} disabled={!canNextPage}>&raquo;</a>\r\n            </li>\r\n\r\n            {/* Page Status*/}\r\n            <li>\r\n              <button class=\"btn btn-secondary\" disabled>\r\n                Page{' '}\r\n                <strong>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n                </strong>{' '}\r\n              </button>\r\n            </li>\r\n\r\n            {/* Page Dropdown*/}\r\n            <li>\r\n              <select\r\n                class=\"form-select\"\r\n                value={pageSize}\r\n                onChange={e => {\r\n                  setPageSize(Number(e.target.value))\r\n                }}\r\n              >\r\n                {[25, 50, 100, 220].map(pageSize => (\r\n                  <option key={pageSize} value={pageSize}>\r\n                    Show {pageSize}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </li>\r\n            \r\n            \r\n          </ul>\r\n\r\n          \r\n\r\n        </div>\r\n        \r\n      }\r\n\r\n      <BTable striped bordered hover top size=\"sm\" {...getTableProps()}>\r\n        <thead class=\"align-items-center font-size-10\">\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>\r\n                  <div>\r\n                    {column.canGroupBy ? (\r\n                      // If the column can be grouped, let's add a toggle\r\n                      <span {...column.getGroupByToggleProps()}>\r\n                        {column.isGrouped ? '🛑 ' : '👊 '}\r\n                      </span>\r\n                    ) : null}\r\n                    <span {...column.getSortByToggleProps()}>\r\n                      {column.render('Header')}\r\n                      {/* Add a sort direction indicator */}\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' 🔽'\r\n                          : ' 🔼'\r\n                        : ''}\r\n                    </span>\r\n                  </div>\r\n                  {/* Render the columns filter UI */}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td {...cell.getCellProps()}>\r\n                      {cell.isGrouped ? (\r\n                        // If it's a grouped cell, add an expander and row count\r\n                        <>\r\n                          <span {...row.getToggleRowExpandedProps()}>\r\n                            {row.isExpanded ? '👇' : '👉'}\r\n                          </span>{' '}\r\n                          {cell.render('Cell', { editable: false })} (\r\n                          {row.subRows.length})\r\n                        </>\r\n                      ) : cell.isAggregated ? (\r\n                        // If the cell is aggregated, use the Aggregated\r\n                        // renderer for cell\r\n                        cell.render('Aggregated')\r\n                      ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\r\n                        // Otherwise, just render the regular cell\r\n                        cell.render('Cell', { editable: true })\r\n                      )}\r\n                    </td>\r\n                  )\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </BTable>\r\n      {/*\r\n        Pagination can be built however you'd like.\r\n        This is just a very basic UI implementation:\r\n      */}\r\n\r\n      <pre>\r\n        <code>\r\n\r\n          {debug && JSON.stringify(\r\n            {\r\n              pageIndex,\r\n              pageSize,\r\n              pageCount,\r\n              canNextPage,\r\n              canPreviousPage,\r\n              sortBy,\r\n              groupBy,\r\n              expanded: expanded,\r\n              filters,\r\n              selectedRowIds: selectedRowIds,\r\n            },\r\n            null,\r\n            2\r\n          )}\r\n        </code>\r\n      </pre>\r\n      <br />\r\n      <br />\r\n    </>\r\n  )\r\n}\r\n\r\n// Define a custom filter filter function!\r\nfunction filterGreaterThan(rows, id, filterValue) {\r\n  return rows.filter(row => {\r\n    const rowValue = row.values[id]\r\n    return rowValue >= filterValue\r\n  })\r\n}\r\n\r\n// This is an autoRemove method on the filter function that\r\n// when given the new filter value and returns true, the filter\r\n// will be automatically removed. Normally this is just an undefined\r\n// check, but here, we want to remove the filter if it's not a number\r\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\r\n\r\n// This is a custom aggregator that\r\n// takes in an array of leaf values and\r\n// returns the rounded median\r\nfunction roundedMedian(leafValues) {\r\n  let min = leafValues[0] || 0\r\n  let max = leafValues[0] || 0\r\n\r\n  leafValues.forEach(value => {\r\n    min = Math.min(min, value)\r\n    max = Math.max(max, value)\r\n  })\r\n\r\n  return Math.round((min + max) / 2)\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n  ({ indeterminate, ...rest }, ref) => {\r\n    const defaultRef = React.useRef()\r\n    const resolvedRef = ref || defaultRef\r\n\r\n    React.useEffect(() => {\r\n      resolvedRef.current.indeterminate = indeterminate\r\n    }, [resolvedRef, indeterminate])\r\n\r\n    return (\r\n      <>\r\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n      </>\r\n    )\r\n  }\r\n)\r\n\r\nexport { ReactTable }\r\n","import React from 'react'\r\n\r\nfunction DraftedColumnFilter({column: { filterValue, setFilter, preFilteredRows, id },}) \r\n{\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        console.log(filterValue)\r\n        console.log(e.target.value)\r\n        const filterValue2 = e.target.value==\"All\" ? undefined : \"\"\r\n        console.log(filterValue2)\r\n        setFilter(filterValue2)\r\n      }}\r\n    >\r\n      <option value=\"All\">All</option>\r\n      <option value=\"\">Drafted</option>\r\n    </select>\r\n  )\r\n}\r\n\r\nfunction PositionColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    return ['C', '1B', '2B', '3B', 'SS', 'OF', \"DH\", 'SP', 'RP']\r\n  })\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        console.log(e.target.value)\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nfunction RoundColumnFilter({\r\n  column: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n  // Calculate the options for filtering\r\n  // using the preFilteredRows\r\n  const options = React.useMemo(() => {\r\n    const rounds = []\r\n    for (var i=1; i<24; i++){\r\n      var round = '0' + i + ':'\r\n      if (i >= 10){ round = i + ':'}\r\n      rounds.push(round)\r\n    }\r\n    return rounds\r\n  })\r\n\r\n  // Render a multi-select box\r\n  return (\r\n    <select\r\n      value={filterValue}\r\n      onChange={e => {\r\n        setFilter(e.target.value || undefined)\r\n      }}\r\n    >\r\n      <option value=\"\">All</option>\r\n      {options.map((option, i) => (\r\n        <option key={i} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  )\r\n}\r\n\r\nexport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n}\r\n\r\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass PlayerTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'Players',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Pick: RoundColumnFilter,\r\n        Name: DefaultColumnFilter,\r\n        Pos: PositionColumnFilter, \r\n        Team: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n        Status: SelectColumnFilter,\r\n        ADP: RoundColumnFilter\r\n      },\r\n      options: {\r\n        links: [{Name: 'Link'}],\r\n        lastColumn: 'Pick',\r\n        addedColumns: []\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          hiddenColumns={this.state.hiddenColumns}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default PlayerTable\r\n","import React from 'react'\r\nimport { getSheetColumns, getSheetData, getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass DraftTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'Draft',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Pick: RoundColumnFilter,\r\n        Name: DefaultColumnFilter,\r\n        Pos: PositionColumnFilter, \r\n        Team: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n        Status: SelectColumnFilter\r\n      },\r\n      options: {\r\n        links: [{Name: 'Link'}],\r\n        lastColumn: 'Pts',\r\n        nullValues: [{Name: '<Pending>'}]\r\n      }\r\n    }\r\n  }\r\n  /*\r\n  getColumns() {\r\n    getSheetColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((columns)=>{\r\n      if (!equalObjects(this.state.columns, columns)){\r\n        this.setState({ columns: columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  getData() {\r\n    getSheetData(this.state.sheetName).then((data)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, data)){\r\n        this.setState({ data: data })\r\n      }\r\n    })\r\n  }\r\n  */\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.getColumns()\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          showPages={true}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default DraftTable\r\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass OwnerDraftTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'OwnerDraft',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n      },\r\n      options: {\r\n        links: [],\r\n        addedColumns: []\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          showPages={false}\r\n          initialPageSize={10}\r\n          hiddenColumns={this.state.hiddenColumns}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default OwnerDraftTable\r\n","import React from \"react\";\nimport PlayerTable from '../Tables/PlayerTable';\nimport DraftTable from '../Tables/DraftTable';\nimport OwnerDraftTable from '../Tables/OwnerDraftTable';\n\nfunction Draft() {\n  return (\n    <div className=\"players\">\n      <div class=\"container pb-5 w-100 p-3\">\n        <h1 class=\"text-center\">Draft</h1>\n        <hr class=\"col-lg-14 mx-auto\"/>\n        <div class=\"row align-items-top my-5\">\n          <div class=\"col-lg-14\">\n          <h3>Owners</h3>\n            <OwnerDraftTable/>\n          </div>\n        </div>\n        <div class=\"row align-items-top pd-5\">\n          <div class=\"col-lg-6\">\n            <h3>Draft</h3>\n            <DraftTable/>  \n          </div>\n          <div class=\"col-lg-6\">\n            <h3>Players</h3>\n            <PlayerTable/>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default Draft;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport rehypeRaw from 'rehype-raw'\n\nclass MdPage extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {markdown: null}\n  }\n\n  componentWillMount() {\n    console.log('will mount')\n    fetch(this.props.markdown).then((response) => response.text()).then((text) => {\n      console.log(text)\n      this.setState({ markdown: text })\n    })\n  }\n\n  render () {\n    return (\n      <div className=\"rules\">\n        <div class=\"container\">\n          <div class=\"row align-items-top my-5 justify-content-center pb-5\">\n            <div class=\"col-lg-7\">\n              <ReactMarkdown \n                children={this.state.markdown}\n                rehypePlugins={[rehypeRaw]}\n              />\n            </div>\n          </div>\n        </div>\n        <br/>\n      </div>\n    );\n  }\n  \n}\n\nexport default MdPage;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport champ from \"./images/champ.jpg\"\nimport markdown from \"./markdown/rules.md\"\nimport MdPage from \"./MdPage\"\n\nclass Rules extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {markdown: null}\n  }\n\n  componentWillMount() {\n    console.log('will mount')\n    fetch(markdown).then((response) => response.text()).then((text) => {\n      console.log(text)\n      this.setState({ markdown: text })\n    })\n  }\n\n  render () {\n    return (\n      <MdPage markdown={markdown}/>\n    );\n  }\n  \n}\n\nexport default Rules;\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass KeeperTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'Keepers',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Name: DefaultColumnFilter,\r\n        Pos: PositionColumnFilter, \r\n        Team: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n      },\r\n      options: {\r\n        links: [{Name: 'Link'}],\r\n        lastColumn: 'RdMx'\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          showPages={false}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default KeeperTable\r\n","import React from \"react\";\nimport KeeperTable from '../Tables/KeeperTable';\n\nfunction Keepers() {\n  return (\n    <div className=\"players\">\n    <div class=\"container pb-5 w-100 p-3\">\n      <h1 class=\"text-center\">Keepers</h1>\n      <hr class=\"col-lg-6 mx-auto\"/>\n      <div class=\"row align-items-top my-5 mx-auto\">\n        <div class=\"col-lg-6 mx-auto\">\n          <KeeperTable/>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default Keepers;\n","import React from 'react'\r\nimport {getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass KeeperHistoryTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'KeeperHistory',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Year: SelectColumnFilter,\r\n        Name: DefaultColumnFilter,\r\n        Pos: PositionColumnFilter, \r\n        Team: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n      },\r\n      options: {\r\n        links: [],\r\n        lastColumn: 'RdMx'\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          showPages={true}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default KeeperHistoryTable\r\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass DraftHistoryTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'DraftHistory',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Year: SelectColumnFilter,\r\n        Pick: RoundColumnFilter,\r\n        Name: DefaultColumnFilter,\r\n        Pos: PositionColumnFilter, \r\n        Team: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n      },\r\n      options: {\r\n        links: [],\r\n        lastColumn: 'Pos'\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          showPages={true}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default DraftHistoryTable\r\n","import React from \"react\";\nimport KeeperHistoryTable from '../Tables/KeeperHistoryTable';\nimport DraftHistoryTable from '../Tables/DraftHistoryTable';\n\nfunction History() {\n  return (\n    <div className=\"players\">\n      <div class=\"container pb-5 w-100 p-3\">\n        <h1 class=\"text-center\">History</h1>\n        <hr class=\"col-lg-12 mx-auto\"/>\n        <div class=\"row align-items-top pd-5\">\n          <div class=\"col-lg-6\">\n            <h3>Draft History</h3> \n            < DraftHistoryTable/>\n          </div>\n          <div class=\"col-lg-6\">\n            <h3>Keeper History</h3>\n            < KeeperHistoryTable/>\n          </div>\n        </div>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default History;\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass OwnerStatsTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'OwnerStats',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n      },\r\n      options: {\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={50}\r\n          showPages={false}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default OwnerStatsTable\r\n","import React from 'react'\r\nimport { getDataAndColumns } from './googleData'\r\nimport {ReactTable} from './BTable'\r\n\r\nimport {\r\n  EditableCell,\r\n  DefaultColumnFilter,\r\n  SelectColumnFilter,\r\n  SliderColumnFilter,\r\n  NumberRangeColumnFilter,\r\n  fuzzyTextFilterFn\r\n} from './Fitlers'\r\n\r\nimport {\r\n  DraftedColumnFilter,\r\n  PositionColumnFilter,\r\n  RoundColumnFilter\r\n} from './CustomFilters'\r\n\r\n\r\nclass SeasonStatsTable extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sheetName: 'SeasonStats',\r\n      columns: [],\r\n      data: [],\r\n      interval: 0,\r\n      columnFilters: {\r\n        Year: SelectColumnFilter,\r\n        Owner: SelectColumnFilter,\r\n      },\r\n      options: {\r\n      }\r\n    }\r\n  }\r\n\r\n  update() {\r\n    getDataAndColumns(this.state.sheetName, this.state.columnFilters, this.state.options).then((obj)=>{\r\n      // check if data has been updated\r\n      if (!equalObjects(this.state.data, obj.data)){\r\n        this.setState({ data: obj.data, columns: obj.columns })\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update()\r\n    if(this.interval>=1000){\r\n      this.timer = setInterval(() => { this.update() }, this.state.interval)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if(this.interval>=1000){\r\n      clearInterval(this.timer);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <ReactTable \r\n          columns={this.state.columns} \r\n          data={this.state.data}\r\n          updateMyData={this.update()}\r\n          skipReset={true}\r\n          initialPageSize={100}\r\n          showPages={true}\r\n        />\r\n    )\r\n  }\r\n}\r\n\r\nfunction equalObjects(a, b){\r\n  return JSON.stringify(a) === JSON.stringify(b)\r\n}\r\n\r\nexport default SeasonStatsTable\r\n","import React from \"react\";\nimport OwnerStatsTable from '../Tables/OwnerStatsTable';\nimport SeasonStatsTable from '../Tables/SeasonStatsTable';\n\nfunction Stats() {\n  return (\n    <div className=\"players\">\n    <div class=\"container pb-5 w-100 p-3\">\n      <h1 class=\"text-center\">Stats</h1>\n      <hr class=\"col-lg-8 mx-auto\"/>\n      <div class=\"row align-items-top my-5 mx-auto\">\n        <div class=\"col-lg-8 mx-auto\">\n          <h3>Owner Totals</h3> \n          <OwnerStatsTable/>\n        </div>\n      </div>\n      <div class=\"row align-items-top my-5 mx-auto\">\n        <div class=\"col-lg-12 mx-auto\">\n          <h3>Season Totals</h3> \n          <SeasonStatsTable/>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default Stats;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Navigation, Footer, Home, About, Contact, Draft, Rules, Keepers, History, Stats } from \"./Components/Pages\";\r\nimport \"bootswatch/dist/simplex/bootstrap.min.css\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HashRouter>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={() => <Home />} />\r\n          <Route path=\"/about\" exact component={() => <About />} />\r\n          <Route path=\"/contact\" exact component={() => <Contact />} />\r\n          <Route path=\"/draft\" exact component={() => <Draft />} />\r\n          <Route path=\"/keepers\" exact component={() => <Keepers />} />\r\n          <Route path=\"/stats\" exact component={() => <Stats />} />\r\n          <Route path=\"/history\" exact component={() => <History />} />\r\n          <Route path=\"/rules\" exact component={() => <Rules />} />\r\n        </Switch>\r\n        <Footer />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nrequire('dotenv').config()\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}